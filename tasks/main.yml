---
- name: Install basic packages
  ansible.builtin.apt:
    pkg:
      - apt-utils
      - wget
      - vim
      - nano
      - acl
      - curl
      - fail2ban
      - git
      - htop
      - build-essential
      - gnupg
      - apt-transport-https
      - ufw
      - kmod
    update_cache: yes
    state: present
  tags: packages
- name: Setup CrowdSec
  block: 
    - name: Add Crowdsec GPG key
      ansible.builtin.apt_key:
        url: https://packagecloud.io/crowdsec/crowdsec/gpgkey
        keyring: /etc/apt/keyrings/crowdsec_crowdsec-archive-keyring.gpg
        state: present
      tags: security

    - name: Add Crowdsec repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/crowdsec_crowdsec-archive-keyring.gpg] https://packagecloud.io/crowdsec/crowdsec/{{ distribution }} {{ version }} main"
        state: present
        filename: 'crowdsec_crowdsec'
      tags: security

    - name: Add Crowdsec source repository
      ansible.builtin.apt_repository:
        repo: "deb-src [signed-by=/etc/apt/keyrings/crowdsec_crowdsec-archive-keyring.gpg] https://packagecloud.io/crowdsec/crowdsec/{{ distribution }} {{ version }} main"
        state: present
        filename: 'crowdsec_crowdsec'
      tags: security

    - name: install Crowdsec and firewall bouncers
      ansible.builtin.apt:
        pkg:
          - crowdsec
          - crowdsec-firewall-bouncer-iptables
        state: latest
        update_cache: yes
      tags: security

- name: Setup fail2ban
  ansible.builtin.service:
    name: fail2ban
    enabled: yes
  tags: security
- name: Enable fail2ban
  ansible.builtin.service:
    name: fail2ban
    enabled: yes
  tags: security
- name: Setup SSH service
  block:
    - name: Disable password authentication
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        line: "PasswordAuthentication no"
      notify: restart ssh
      tags: security
    - name: Disable root login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        line: "PermitRootLogin no"
      notify: restart ssh
      tags: security
    - name: Disable password authentication
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "PasswordAuthentication yes"
        state: absent
      notify: restart ssh
      tags: security
    - name: Disable root login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "PermitRootLogin yes"
        state: absent
      notify: restart ssh
      tags: security
    - name: enable ssh
      ansible.builtin.service:
        name: ssh
        enabled: yes
      tags: security  
- name: Setup UFW
  block:
    - name: Check ip6 mod
      community.general.modprobe:
        name: ip6table_filter
        state: present
      tags: security
    - name: Reset to defaults
      community.general.ufw:
        state: reset
      tags: security
    # Allow by default only ssh and http(s) ports
    - name: Allow ports
      community.general.ufw:
        rule: allow
        port: "{{ item }}"
      with_items:
        - "{{ ufw_allowed_ports }}"
      tags: security
    - name: Enable ufw/firewall
      community.general.ufw:
        state: enabled
        policy: deny
        direction: incoming
      tags: security
- name: Install Unattended Upgrades
  ansible.builtin.apt:
    state: present
    pkg: unattended-upgrades
  tags: packages
- name: Set up unattended upgrades
  ansible.builtin.copy:
    src: apt_periodic
    dest: /etc/apt/apt.conf.d/10periodic
    owner: root
    group: root
    mode: '0660'
  tags: security
- name: Automatically remove unused dependencies
  ansible.builtin.lineinfile:
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    regexp: "Unattended-Upgrade::Remove-Unused-Dependencies"
    line: 'Unattended-Upgrade::Remove-Unused-Dependencies "true";'
    state: present
    create: yes
    owner: root
    group: root
    mode: '0660'
  tags: security
- name: Create sudoers config folder
  ansible.builtin.file:
    path: /etc/sudoers.d
    state: directory
    mode: 0440
  tags: security
- name: Setup sudoers file
  ansible.builtin.template:
    src: sudoers.j2
    dest: /etc/sudoers.d/sudoers
    validate: "visudo -cf %s"
    mode: 0440
  tags: security
